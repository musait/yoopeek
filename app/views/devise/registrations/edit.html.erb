<%= content_for :body_style do %>
<link rel="stylesheet" href="/theme/user/hireo/css/progress_bar.css">
<style media="screen">
  .image-upload > input
  {
     display: none;
  }
  .banner{
    background-color: #4267b2;
    top: 0;
    padding: 10px 20px;
    line-height: 24px;
    color: #fff;
    position: relative;
    font-size: 16px;
    font-weight: 500;
    display: inline-block;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
    overflow: hidden;
    border: none;
    border-radius: 4px;
    box-shadow: 0 4px 12px rgba(102,103,107,0.15);
   }

  .submit-field > .date-time {
    width: 30%;
    text-indent: 15px;
  }
  .required:after {
    content: " *";
    color: red;
  }
</style>
<style media="screen">
  .inputfile {
  	width: 0.1px;
  	height: 0.1px;
  	opacity: 0;
  	overflow: hidden;
  	position: absolute;
  	z-index: -1;
  }
  .inputfile + label {
      min-width:150px;
      width:auto;
      text-align:center;
      color: white;
      background-color: #4267b2;
      display: inline-block;
      padding-right:20px;
      padding-left:20px;
  }

  .inputfile:focus + label,
  .inputfile + label:hover {
      background-color: #4267b2;
  }
  .inputfile + label {
  	cursor: pointer; /* "hand" cursor */
  }
  .inputfile:focus + label {
  	outline: 1px dotted #000;
  	outline: -webkit-focus-ring-color auto 5px;
  }
  .inputfile + label * {
  	pointer-events: none;
  }
</style>
<% end %>
<!-- Dashboard Headline -->
<div class="dashboard-headline">
  <h3><%= I18n.t('.user.all.edit.my_personal_info') %></h3>
</div>

<%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
  <%= render 'layouts/user/edit/form.html.erb', user: current_user, f: f %>

<% end %>
<!-- Row / End -->
<%= content_for :body_script do %>
  <script type="text/javascript">
    var inputs = document.querySelectorAll( '.inputfile' );
    Array.prototype.forEach.call( inputs, function( input )
    {
    	var label	 = input.nextElementSibling,
    		labelVal = label.innerHTML;

    	input.addEventListener( 'change', function( e )
    	{
    		var fileName = '';
        if( this.files && this.files.length > 1 ){
    			fileName = ( this.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', this.files.length );
    		}else{

    			fileName = this.value.split('\\').pop()
        };
    		if( fileName )
    			label.querySelector( 'strong' ).innerHTML = fileName;
    		else
    			label.innerHTML = labelVal;
    	});
    });
  </script>
  <script type="text/javascript">
    $(document).ready(function () {
      $('#checkbox1').change(function () {
        if (this.checked){
          document.getElementById('vatNumber').style.display = "block";
          document.getElementById('vatRate').style.display = "block";
        }else{
          document.getElementById('vatNumber').style.display = "none";
          document.getElementById('vatRate').style.display = "none";
        }
      });
  });
  </script>

  <script type="text/javascript">
    $(document).ready(function(){
      $('#profession_id').selectpicker({
        title : '<%= t("select_a_profession") %>'
      });
      $('#subcategory_id').selectpicker({
        title : '<%= t("select_a_speciality") %>',
        noneSelectedText: ''
      });
      $('#vat_select').selectpicker({
        title : 'Séléctionnez une TVA',
        noneSelectedText: ''
      });
    });
    $(document).ready(function () {
      $('#profession_id').change(function(e){
        var profession_id = $(this).val();
        $.ajax({
            type: "POST",
            url: "/users/delete_subcategory",
            success: function(data){
              $.ajax({
                  type: "POST",
                  url: "/users/get_subcategories",
                  data: {profession_id: profession_id}
              });
            }
        });
      });
    });
  </script>
  <script type="text/javascript">
    $(document).ready(function () {
      $("#subcategory_id").on("change", function (e) {
        if ($(this)[0].length) {
          $.ajax({
              type: "POST",
              url: "/users/new_subcategory",
              data: {subcategory: $(this)[0].value}
          });
        }
      });
    });
  </script>
  <script type="text/javascript">
    $(document).ready(function () {
      $("#tag_select").select2({
        createTag: function (params) {
          var term = $.trim(params.term);

          if (term === '') {
            return null;
          }

          return {
            id: term,
            text: term,
            newTag: true // add additional parameters
          }
        },
        theme: "classic",
        tags: true,
        allowClear: true,
        tokenSeparators: [',', ' '],
        multiple: true
      }).on('select2:unselecting', function (e) {
          var skill_name = e.params.args.data.text;
          $.ajax({
            url: "/users/skill",
            type: "GET",
            dataType: "script",
            data: { "skills": skill_name }
          });
      });
    });
     $(document).ready(function(){
        $("#slider").change(function(){
          $('#price_rate').val($(this).val())
        });
      });
  </script>
    <% if current_user.worker? %>
      <script src="https://js.stripe.com/v3/" data-no-turbolink></script>
      <script type="text/javascript">
        const stripe = Stripe('<%= Rails.application.credentials.dig(Rails.env.to_sym, :stripe, :publishable_key)  %>');
        const myForm = document.querySelector('#edit_user');
        myForm.addEventListener('submit', handleForm);

        async function handleForm(event) {
          event.preventDefault();
          var fileData = null
          if ($('#id-file')[0].files.length != 0) {
            const data = new FormData();
            data.append('file', document.querySelector('#id-file').files[0]);
            data.append('purpose', 'identity_document');
            const fileResult = await fetch('https://uploads.stripe.com/v1/files', {
              method: 'POST',
              headers: {'Authorization': 'Bearer <%= Rails.application.credentials.dig(Rails.env.to_sym, :stripe, :publishable_key)  %>'},
              body: data,
            });
            fileData = await fileResult.json();
          }

          //////back
          var fileDataBack = null
          if ($('#id-fileVerso')[0].files.length != 0) {
            const dataBack = new FormData();
            dataBack.append('file', document.querySelector('#id-fileVerso').files[0]);
            dataBack.append('purpose', 'identity_document');
            const fileResultBack = await fetch('https://uploads.stripe.com/v1/files', {
              method: 'POST',
              headers: {'Authorization': 'Bearer <%= Rails.application.credentials.dig(Rails.env.to_sym, :stripe, :publishable_key)  %>'},
              body: dataBack
            });
            fileDataBack = await fileResultBack.json();
          }


          ///////// doc supp
          var fileDataSup = null
          if ($('#id-fileSup')[0].files.length != 0) {
            const dataSup = new FormData();
            dataSup.append('file', document.querySelector('#id-fileSup').files[0]);
            dataSup.append('purpose', 'identity_document');
            const fileResultSup = await fetch('https://uploads.stripe.com/v1/files', {
              method: 'POST',
              headers: {'Authorization': 'Bearer <%= Rails.application.credentials.dig(Rails.env.to_sym, :stripe, :publishable_key)  %>'},
              body: dataSup,
            });
            fileDataSup = await fileResultSup.json();
          }

        var stripeCompanyAccount = {
          name: document.querySelector('#user_company_attributes_name').value,
          phone: document.querySelector('#user_phone_number').value,
          address: {
            line1: document.querySelector('#street_id').value,
            city: document.querySelector('#locality').value,
            state: document.querySelector('#country').value,
            postal_code: document.querySelector('#postal_code').value,
          },
          directors_provided: true,
          tax_id: "123456"
        }
        <% if current_user.stripe_account_id.present? %>
          const accountResult = await stripe.createToken('account', {
            // business_type: 'individual',
            business_type: 'company',
            company: stripeCompanyAccount,
          });
        <% else %>
          const accountResult = await stripe.createToken('account', {
            // business_type: 'individual',
            business_type: 'company',
            company: stripeCompanyAccount,
            tos_shown_and_accepted: true
          });
        <% end %>
        var stripePersonAttribute = {
          first_name: document.querySelector('#user_firstname').value,
          last_name: document.querySelector('#user_lastname').value,
          email: document.querySelector('#user_email').value,
          phone: document.querySelector('#user_phone_number').value,
          dob: {
            day: document.querySelector('#user_birthdate_3i').value,
            month: document.querySelector('#user_birthdate_2i').value,
            year: document.querySelector('#user_birthdate_1i').value
          },
          address: {
            line1: document.querySelector('#street_id').value,
            city: document.querySelector('#locality').value,
            state: document.querySelector('#country').value,
            postal_code: document.querySelector('#postal_code').value,
          },
          verification: {
            document: {
              front: (fileData != null ? fileData.id : null),
              back: (fileDataBack != null ? fileDataBack.id : null),
            },
            additional_document: {
              front: (fileDataSup != null ? fileDataSup.id : null)
            }
          },
        }
        console.log(stripePersonAttribute);

        if (stripePersonAttribute["verification"]["document"]["front"] == null &&stripePersonAttribute["verification"]["document"]["back"] == null) {
          delete stripePersonAttribute["verification"]["document"]
        } else {
          if (stripePersonAttribute["verification"]["document"]["front"] == null) {
            delete stripePersonAttribute["verification"]["document"]["front"]
          }
          if (stripePersonAttribute["verification"]["document"]["back"] == null) {
            delete stripePersonAttribute["verification"]["document"]["back"]
          }
        }
        if (stripePersonAttribute["verification"]["additional_document"]["front"] == null) {
          delete stripePersonAttribute["verification"]["additional_document"]
        }
        if (jQuery.isEmptyObject(stripePersonAttribute["verification"])) {
          delete stripePersonAttribute["verification"]
        }
        console.log(stripePersonAttribute);
        <% if current_user.stripe_person_id.present? %>
          const personResult = await stripe.createToken('person', {
            person: stripePersonAttribute,
          });
        <% else %>

          $.extend( stripePersonAttribute, {
            relationship: {
              representative: true,
              owner: true,
              director: true,
              executive: true,
              title: "CEO",
              percent_ownership: 100,
            },
          });

          const personResult = await stripe.createToken('person', {
            person: stripePersonAttribute
            });
        <% end %>
          var bankResult = null
          if (document.querySelector('#user_company_attributes_iban').value == "" || document.querySelector('#user_company_attributes_iban').value == null) {
            bankResult = null
          } else {
            bankResult = await stripe.createToken('bank_account', {
              country: "FR",
              currency: document.querySelector('#user_company_attributes_currency').value.toLowerCase(),
              account_number: document.querySelector('#user_company_attributes_iban').value,
            });
            if (bankResult.error != null) {
              if (bankResult.error.code == "account_number_invalid") {
                toastr['error']("Vérifiez votre IBAN");
              }
              toastr['error'](bankResult.error.message);
            }
          }



        if (personResult.error != null) {
          if (personResult.error.param == "person[dob][year]") {
            toastr['error']("Vérifiez votre date de naissance (vous devez avoir plus de 18 ans )");
          } else {
            toastr['error'](personResult.error.message);
          }
        }
        if (accountResult.error != null) {
          toastr['error'](accountResult.error.message);
        }
        if (accountResult.token && personResult.token) {
          document.querySelector('#token-account').value = accountResult.token.id;
          document.querySelector('#token-person').value = personResult.token.id;
          if (bankResult != null) {
            document.querySelector('#token-bank').value = bankResult.token.id;
          }
          myForm.submit();
        }
        $("#submit-form-button").prop("disabled", false)

        }
      </script>
    <% end %>
<% end %>
